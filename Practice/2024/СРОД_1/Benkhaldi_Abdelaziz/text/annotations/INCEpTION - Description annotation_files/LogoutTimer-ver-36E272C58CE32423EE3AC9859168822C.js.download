
function LogoutTimer(sessionTimeout) {
var instance = this;
var timeout = sessionTimeout;
var started = null;
var timer = null;
this.tick = function () {
var remaining = timeout - Math.floor((new Date() - started) / 1000);
var remaining2 = Math.max(0, remaining);
var min = Math.floor(remaining2 / 60).toString();

 
 var timerElement = $('#timer');
if (timerElement.text() != min) {
$('#timer').text(min);
}

 
 if (remaining <= -10) {
clearInterval(instance.timer);
location.reload(true);
}
};
this.start = function () {
const TICK_RATE = 1000; 
 if (instance.timer) {
clearInterval(instance.timer);
}
started = new Date();
instance.timer = setInterval(instance.tick, TICK_RATE);
instance.tick();
};
if (typeof Wicket != 'undefined') {
instance.start();
Wicket.Event.subscribe('/ajax/call/beforeSend', function (attr, xhr, status) {
instance.start()
});
}
}
