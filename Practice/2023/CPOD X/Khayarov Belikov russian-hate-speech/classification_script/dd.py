# -*- coding: utf-8 -*-
"""ОБД.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u-gSIcoqqY4LbrkPs93psRJMDoPe56nK
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# from google.colab import drive
# drive.mount('/content/drive')#, force_remount=True)

CLEAR_COMMAND = "cls" if os.name == "nt" else "clear"

data = pd.read_csv("labeled.csv")

# data.head()

cut = data[100:1000]

# cut.head()

# cut['toxic'].plot(kind="hist")

target = {
    0: "no toxic",
    1: "national",
    2: "sexual",
    3: "age",
    4: "political",
    5: "individual",
    6: "None",  # can't be classified
}


def menu(comment):
    # os.system('clear')
    print("1 - Оскорбление по национальности")
    print("2 - Оскорбление по полу")
    print("3 - Оскорбление по возрасту")
    print("4 - Оскорбление по политическим взглядам")
    print("5 - Оскорбление личностное")
    print("6 - Невозможно определить")
    print()
    print("Comment: ", comment)
    print()
    try:
        choose = int(input("Введите тип оскорбления: "))
    except Exception:
        choose = int(input("Введите тип оскорбления: "))
    finally:
        os.system(CLEAR_COMMAND)

    return choose


def save_new_ds(df, index=None, filename_mako="out.csv"):
    new_filename = filename_mako

    if index is not None:
        new_filename = f"{str(index)}__{filename_mako}"

    df.to_csv(new_filename)


def main():
    new_data = pd.DataFrame({"comment": [], "toxic": []})
    for index, row in cut.iterrows():
        print(index)

        current_comment = row["comment"]

        if index % 100 == 0:
            save_new_ds(new_data, index)
        if row["toxic"] == 0.0:
            new_data = pd.concat(
                [
                    pd.DataFrame([[current_comment, 0]], columns=new_data.columns),
                    new_data,
                ],
                ignore_index=True,
            )
            # print(row['comment'], row['toxic']==1.0)
            # break
        else:
            choose = menu(current_comment)
            while choose not in [1, 2, 3, 4, 5, 6]:
                print("Мимо.")
                choose = menu(current_comment)
            new_data = pd.concat(
                [
                    pd.DataFrame([[current_comment, choose]], columns=new_data.columns),
                    new_data,
                ],
                ignore_index=True,
            )
            # break

    save_new_ds(new_data)

    # new_data


if __name__ == "__main__":
    main()
